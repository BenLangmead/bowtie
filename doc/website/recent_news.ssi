<h2>1.3.0 - 07/22/2020</h2>
<ul>
    <li>Fixed an issue causing <code>bowtie</code> to report incorrect results when using a Bowtie 2 index.</li>
    <li>New, more efficient implementation of <tt><a href="manual.shtml#bowtie-options-reorder">--reorder</a></tt> for keeping SAM output lines in same order as input reads</li>
    <li>Added <tt><a href="manual.shtml#bowtie-options-x">-x</a></tt> parameter for specifying index. <code>bowtie</code> still supports specifying an index via positional parameter, but this behavior will be deprecated.</li>
    <li>Migrated <code>python</code> scripts to <code>python3</code>.</li>
    <li>Fully removed colorspace functionality.</li>
    <li>Added support for compiling on ARM architectures.</li>
    <li>Fixed an issue preventing <code>bowtie</code> from outputting newlines in <tt><a href="manual.shtml#bowtie-options-max">--max</a></tt> and <tt><a href="manual.shtml#bowtie-options-un">--un</a></tt> output files.</li>
    <li>Fixed an issue causing alignment results to vary based on read names.</li>
    <li>Fixed an issue preventing <tt><a href="manual.shtml#bowtie-options-no-unal">--no-unal</a></tt> from suppressing unmapped reads.</li>
    <li>Removed dependence on some third-party libraries, simplifying the code and improving portability.</li>
    <li>Fix an issue preventing <code>bowtie</code> from running with many threads on big-endian machines.</li>
</ul>

<h2>1.2.3 - 07/05/2019</h2>
<ul>
    <li>Added support for reading and inspecting Bowtie 2 indexes. Bowtie 2 indexes can now be used with either Bowtie or Bowtie 2.</li>
    <li>Added support for building an index from a gzipped-compressed FASTA.</li>
    <li>Fixed issue preventing bowtie from reporting repeated alignments when <tt><a href="manual.shtml#bowtie-options-M">-M</a></tt> is specified.</li>
    <li>Fixed issue with <tt><a href="manual.shtml#bowtie-options-F">-F</a></tt> mode omitting final base of each read.</li>
    <li>Fixed clipping of first letter of first read in batches after first.</li>
    <li>Fixed an issue preventing bowtie wrapper script from finding indexes.</li>
</ul>


<h2>1000-Genomes major-allele SNP references -- 4/26/2019</h2>
<ul>
    <li>For each base where the typical reference has the non-majority allele (according to the <a href="http://www.internationalgenome.org">1000 Genomes Project</a>, we substituted in the majority allele instead
    <li>Links for indexes added to sidebar, as are links for the edited FASTA files
    <li>We made versions both for GRCh38 primary assembly and hg19 assembly
    <li>See <a href="https://github.com/BenLangmead/bowtie-majref">how we created them</a>
    <li>Only SNPs (single-base substitutions) are considered for now; indels are future work
    <li>Because only SNPs are considered, coordinates (e.g. gene annotations) are the same as for typical GRCh38 and hg19 assemblies.  Most downstream tools are unaffected as long as major-allele-edited FASTAs are used wherever genome sequences are required.
</ul>

<h2>1.2.2 - 12/11/2017</h2>
<p>Update (12/12/2017): We have had to re-release this version of bowtie to address an issue when compiling with pthreads (<tt>make NO_TBB=1</tt>).</p>
<ul>
    <li>Fixed major issue causing corrupt SAM output when using many threads (<tt><a href="manual.shtml#bowtie-options-p">-p/--threads</a></tt>) on certain systems</li>
    <li>Fixed major issue with incorrect alignment offsets being reported in <tt><a href="manual.shtml#bowtie-options-large-index">--large-index</a></tt> mode</li>
    <li>Fixed major issue with reads files being skipped when multiple inputs were specified together with <tt><a href="manual.shtml#bowtie-options-p">-p/--threads</a></tt></li>
    <li>The official LICENSE of Bowtie was changed to Artistic License 2.0. This fixes an issue with the previous LICENSE, which mistakenly combined elements of different open-source licenses.</li>
    <li>Fixed issue where bowtie would still run for a long time even when <tt><a href="manual.shtml#bowtie-options-u">-u</a></tt> was set to a small number.</li>
    <li>Fixed spurious "Reads file contained a pattern with more than 1024 quality values" error for some colorspace inputs.</li>
    <li>Fixed issue with <tt><a href="manual.shtml#bowtie-options-strata">--strata</a></tt> sometimes failing to suppress alignments at lower strata.</li>
    <li>Fixed issue with ends of paired-end reads sometimes appearing in non-adjacent lines of the SAM output with <tt><a href="manual.shtml#bowtie-options-p">-p/--threads</a></tt> >1</li>
    <li>Fixed issue whereby the read name of end #2 was not always truncated at the first whitespace character</li>
    <li>Code simplifications</li>
</ul>

<h2>1.2.1.1 - 06/13/2017</h2>
<ul>
    <li>Fixed an issue causing Bowtie to segfault when processing reads from stdin</li>
</ul>

<h2>1.2.1 - 06/12/2017</h2>
<p>Please note that Bowtie will be switching to the Artistic 2.0 license in the next release.<br/>
Pre-build binaries now include statically linked TBB and zlib libraries no longer requiring that
these libraries be pre-installed.</p>
<ul>
    <li>Fixed an issue which caused Bowtie to hang during parallell index building when running an optimized binary</li>
    <li>Deprecated <tt>--refout</tt> option.  It will be fully removed in the next release</li>
    <li>Added parallel index building with the bowtie2-build <tt><a href="manual.shtml#bowtie-build-options-threads">--threads</a></tt> option (credit to <a href="https://github.com/aidanreilly8">Aidan Reilly</a>)</li>
    <li>Added native support for gzipped read files.  The wrapper script is no longer responsible for this, which simplifies the wrapper and improves speed and thread scaling.</li>
    <li>Added support for interleaved paired-end FASTQ inputs (<tt><a href="manual.shtml#command-line">--interleaved</a></tt>)</li>
    <li>Fixed issue where first character of some read names was omitted from SAM output when using tabbed input formats</li>
    <li>Fixed issue that caused Bowtie to hang when aligning FASTA inputs with more than one thread</li>
    <li>Bowtie wrapper now works even when invoked via a symlink in a different directory from the executables</li>
    <li>Fixed issue preventing reading <tt><a href="manual.shtml#command-line">--12</a></tt> input on stdin</li>
    <li>Added <tt><a href="manual.shtml#bowtie-options-no-unal">--no-unal</a></tt> option for suppressing unmapped reads in SAM output</li>
</ul>

<h2>1.2.0 - 12/12/2016</h2>
<p>This is a major release with some larger and many smaller changes.  These notes emphasize the large changes.  See commit history for details.</p>
<ul>
    <li>Code related to read parsing was completely rewritten to improve scalability to many threads.  In short, the critical section is simpler and parses input reads in batches rather than one at a time.  The improvement applies to all read formats.</li>
    <li><tt><a href="manual.shtml#bowtie-options-reads-per-batch">--reads-per-batch</a></tt> command line parameter added to specify the number of reads to read from the input file at once</li>
    <li>TBB is now the default threading library.  We consistently found TBB to give superior thread scaling.  It is widely available and widely installed.  That said, we are also preserving a "legacy" version of Bowtie that, like previous releases, does not use TBB.  To compile Bowtie source in legacy mode use <tt>NO_TBB=1</tt>.  To use legacy binaries, download the appropriate binary archive with "legacy" in the name.</li>
    <li>Bowtie now uses a queue-based lock rather than a spin or heavyweight lock.  We find this gives superior thread scaling; we saw an order-of-magnitude throughput improvements at 120 threads in one experiment, for example.</li>
    <li>Unnecessary thread synchronization removed</li>
    <li>Fixed colorspace parsing when primer base is present</li>
    <li>Fixed bugs related to <tt><a href="manual.shtml#bowtie-options-s">--skip</a></tt> command line option</li>
</ul>
